{"componentChunkName":"component---src-templates-blog-post-js","path":"/docker/docker로-php올리기/","result":{"data":{"site":{"siteMetadata":{"title":"ZungTa's Blog","author":"ZungTa","siteUrl":"https://zungta.com","comment":{"disqusShortName":"","utterances":""},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"6d4ac846-11eb-5ab7-8551-671bf8d212a2","excerpt":"참고 사이트:  docker 이미지로 apache및 php 개발환경 구축 일단 해당 php 프로젝트가 있는 폴더에서 Dockerfile을 생성한다. 그리고 docker build를 진행한다. 그럼 도커 이미지가 만들어졌다. 그 이미지를 이용해서 컨테이너를 올리자. 같은 식으로 실행한다. 성공적으로 컨테이너가 실행되었으면  에 접속해보면 된다.","html":"<p>참고 사이트: </p>\n<p><a href=\"https://velog.io/@wimes/docker-%EC%9D%B4%EB%AF%B8%EC%A7%80%EB%A1%9C-apache%EB%B0%8F-php-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95\" target=\"_blank\" rel=\"nofollow\">docker 이미지로 apache및 php 개발환경 구축</a></p>\n<p>일단 해당 php 프로젝트가 있는 폴더에서 Dockerfile을 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"docker\"><pre class=\"language-docker\"><code class=\"language-docker\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> ubuntu:18.04</span>\n\n<span class=\"token comment\"># Avoiding user interaction with tzdata</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ENV</span> DEBIAN_FRONTEND=noninteractive</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> apt-get update</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> apt-get install -y apache2 # install Apache web server (Only <span class=\"token string\">'yes'</span>)</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> apt-get install -y software-properties-common # php 5.6(이전버전) 설치를 위해</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> add-apt-repository ppa:ondrej/php # For Installing PHP 5.6</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> apt-get update</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> apt-get install -y php5.6</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">EXPOSE</span> 80</span>\n\n<span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"apachectl\"</span>, <span class=\"token string\">\"-D\"</span>, <span class=\"token string\">\"FOREGROUND\"</span>]</span></code></pre></div>\n<p>그리고 docker build를 진행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> build <span class=\"token builtin class-name\">.</span> -t my-php</code></pre></div>\n<p>그럼 도커 이미지가 만들어졌다.</p>\n<p>그 이미지를 이용해서 컨테이너를 올리자.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run -d --name <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> -p <span class=\"token number\">8080</span>:80 -v /home/ubuntu/example/html:/var/www/html example</code></pre></div>\n<p>같은 식으로 실행한다.</p>\n<p>성공적으로 컨테이너가 실행되었으면 <code class=\"language-text\">localhost:8080</code> 에 접속해보면 된다.</p>","frontmatter":{"title":"Docker로 PHP올리기","date":"2021-09-07"}}},"pageContext":{"slug":"/docker/docker로-php올리기/","previous":{"fields":{"slug":"/gatsby/gatsby-post-날짜-요일-표시하기/"},"frontmatter":{"title":"Gatsby Post 날짜 요일 표시하기"}},"next":{"fields":{"slug":"/react/React + Typescript에 i18n 적용/React + Typescript에 i18n 적용/"},"frontmatter":{"title":"React + Typescript에 i18n 적용"}}}},"staticQueryHashes":["1216846846","2486386679","3128451518","939308034"]}