{"componentChunkName":"component---src-templates-blog-post-js","path":"/react/React + Typescript에 i18n 적용/React + Typescript에 i18n 적용/","result":{"data":{"site":{"siteMetadata":{"title":"ZungTa's Blog","author":"ZungTa","siteUrl":"https://zungta.com","comment":{"disqusShortName":"","utterances":""},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"76317476-4daf-5526-b8fe-ecbd18b88246","excerpt":"와 를 설치해준다.  폴더에  폴더를 만들고   파일과  폴더를 만들어준다.  폴더 안에 언어별로 ts 파일을 생성해준다. 에서  를 import 해준다. 이제 원하는 컴포넌트에서 을 임포트해서 에디터의 지원을 받으며 편하게 사용할 수 있다. 버전 기준 “react”: “^17.0.2” “i18next”: “^20.2.2” “react-i18next”: “^11.8.15”","html":"<p><code class=\"language-text\">i18next</code>와 <code class=\"language-text\">react-i18next</code>를 설치해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i i18next react-i18next</code></pre></div>\n<p><code class=\"language-text\">src/config</code> 폴더에 <code class=\"language-text\">lang</code> 폴더를 만들고 <code class=\"language-text\">i18n.ts</code> <code class=\"language-text\">react-i18next.d.ts</code> 파일과 <code class=\"language-text\">locales</code> 폴더를 만들어준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> i18n <span class=\"token keyword\">from</span> <span class=\"token string\">'i18next'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> initReactI18next <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-i18next'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> ko <span class=\"token keyword\">from</span> <span class=\"token string\">'./locales/ko'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> en <span class=\"token keyword\">from</span> <span class=\"token string\">'./locales/en'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> resources <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  ko<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    translation<span class=\"token operator\">:</span> ko<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  en<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    translation<span class=\"token operator\">:</span> en<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ni18n<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>initReactI18next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  resources<span class=\"token punctuation\">,</span>\n  lng<span class=\"token operator\">:</span> <span class=\"token string\">'ko'</span><span class=\"token punctuation\">,</span>\n  fallbackLng<span class=\"token operator\">:</span> <span class=\"token string\">'ko'</span><span class=\"token punctuation\">,</span>\n  debug<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  keySeparator<span class=\"token operator\">:</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// default value</span>\n  interpolation<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    escapeValue<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  returnObjects<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> i18n<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// import the original type declarations</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'react-i18next'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// import all namespaces (for the default language, only)</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> resources <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./i18n'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">module</span> <span class=\"token string\">'react-i18next'</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">type</span> <span class=\"token class-name\">DefaultResources</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span> resources<span class=\"token punctuation\">[</span><span class=\"token string\">'ko'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token keyword\">typeof</span> resources<span class=\"token punctuation\">[</span><span class=\"token string\">'en'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Resources</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DefaultResources</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">locales</code> 폴더 안에 언어별로 ts 파일을 생성해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// ko 예시</span>\n<span class=\"token keyword\">const</span> lang <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\tname<span class=\"token operator\">:</span> <span class=\"token string\">'ZungTa'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> lang<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">index.tsx</code>에서 <code class=\"language-text\">i18n.ts</code> 를 import 해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@/config/lang/i18n'</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<p>이제 원하는 컴포넌트에서 <code class=\"language-text\">useTranslation</code>을 임포트해서 에디터의 지원을 받으며 편하게 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useTranslation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-i18next'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> t <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTranslation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">css</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>appCss<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Hello </span><span class=\"token punctuation\">{</span><span class=\"token function\">t</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"버전-기준\" style=\"position:relative;\"><a href=\"#%EB%B2%84%EC%A0%84-%EA%B8%B0%EC%A4%80\" aria-label=\"버전 기준 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>버전 기준</h3>\n<ul>\n<li>“react”: “^17.0.2”</li>\n<li>“i18next”: “^20.2.2”</li>\n<li>“react-i18next”: “^11.8.15”</li>\n</ul>","frontmatter":{"title":"React + Typescript에 i18n 적용","date":"2021-10-04"}}},"pageContext":{"slug":"/react/React + Typescript에 i18n 적용/React + Typescript에 i18n 적용/","previous":{"fields":{"slug":"/docker/docker로-php올리기/"},"frontmatter":{"title":"Docker로 PHP올리기"}},"next":{"fields":{"slug":"/react/React + TypeScript에 전역 저장소 설정/React + TypeScript에 전역 저장소 설정/"},"frontmatter":{"title":"React + TypeScript에 전역 저장소 설정"}}}},"staticQueryHashes":["1216846846","2486386679","3128451518","939308034"]}